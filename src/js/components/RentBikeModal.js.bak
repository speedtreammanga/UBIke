/* @flow */
import $ from 'jquery';
import Modal from '../models/Modal';
import Bike from '../models/Bike';

class RentBikeModal extends Modal {
    formIsInvalid: boolean = false;
    bikeToRent: Bike;

    constructor(modalId: string, bike: Bike) {
        super(
            modalId,
            'Rent A Bike',
            'Continue',
            'Cancel'
        );
        this.bikeToRent = bike;

        this.setModalContent(
            this._getModalChildren(),
            this._handleError,
            this._handleOk,
            this._handleCancel
        );
    }

    _getModalChildren() {
        return `
            <p>Enter your UBIke key to rent a bike.</p>
            <div class="ui large right labeled input">
                <input class="member-email" type="text" placeholder="Enter email">
                <div class="ui basic label">
                    @ubike.com
                </div>
            </div>
            ${
                this.formIsInvalid
                ? `<p>${this.errorMessage}</p>`
                : ''
            }
        `;
    }
    _handleError = (err) => console.warn('Something went wrong', err);

    _handleCancel = () => this.dismiss();

    _handleOk() {
        const inputEmail = $('input.member-email').val() + '@ubike.com';
        this.bikeToRent.rent(new String(inputEmail))
        .then((res) => {
            this.dismiss();
        })
        .catch((err) => {
            this.formIsInvalid = true;
            this._displayError(err);
        });
    }

    _displayError(errMessage) {
        this.errorMessage = errMessage;
        this.setModalContent(this._getModalChildren());
        return false;
    }

}

export default RentBikeModal;